"""Add voiceExercisesId to VoiceExcercisesHistory

Revision ID: ff0aaa07489d
Revises: 
Create Date: 2024-09-29 20:34:05.177192

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ff0aaa07489d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('OTP')
    with op.batch_alter_table('Questions', schema=None) as batch_op:
        batch_op.drop_index('Questions_id_key')

    op.drop_table('Questions')
    with op.batch_alter_table('Module', schema=None) as batch_op:
        batch_op.drop_index('Module_id_key')

    op.drop_table('Module')
    with op.batch_alter_table('StudentQuizHistory', schema=None) as batch_op:
        batch_op.drop_index('StudentQuizHistory_id_key')

    op.drop_table('StudentQuizHistory')
    op.drop_table('_prisma_migrations')
    with op.batch_alter_table('Student', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.String(), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('firstname',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.alter_column('lastname',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.alter_column('sex',
               existing_type=postgresql.ENUM('Male', 'Female', name='Gender'),
               type_=sa.String(),
               nullable=True)
        batch_op.alter_column('grade',
               existing_type=postgresql.ENUM('GradeOne', 'GradeTwo', 'GradeThree', name='Grade'),
               type_=sa.String(),
               nullable=True)
        batch_op.drop_index('Student_id_key')
        batch_op.drop_index('Student_studentUsername_key')
        batch_op.drop_constraint('Student_userId_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['user_id'], ['id'])
        batch_op.drop_column('lrnNo')
        batch_op.drop_column('bdate')
        batch_op.drop_column('age')
        batch_op.drop_column('studentUsername')
        batch_op.drop_column('userId')
        batch_op.drop_column('studentPassword')
        batch_op.drop_column('image')
        batch_op.drop_column('gname')
        batch_op.drop_column('middlename')

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.drop_index('User_email_key')
        batch_op.drop_index('User_id_key')
        batch_op.drop_index('User_resetPasswordToken_key')
        batch_op.drop_index('User_username_key')
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('image')
        batch_op.drop_column('role')
        batch_op.drop_column('resetPasswordToken')
        batch_op.drop_column('createdAt')
        batch_op.drop_column('deletedAt')
        batch_op.drop_column('resetPasswordTokenExpiry')

    with op.batch_alter_table('VoiceExcercises', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('userId',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('voice',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('grade',
               existing_type=postgresql.ENUM('GradeOne', 'GradeTwo', 'GradeThree', name='Grade'),
               type_=sa.Enum('Prep', 'Kinder', 'GradeOne', 'GradeTwo', 'GradeThree', name='grade_enum'),
               nullable=True)
        batch_op.alter_column('createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('VoiceExcercises_id_key')
        batch_op.drop_constraint('VoiceExcercises_moduleId_fkey', type_='foreignkey')
        batch_op.drop_constraint('VoiceExcercises_userId_fkey', type_='foreignkey')
        batch_op.drop_column('moduleId')

    with op.batch_alter_table('VoiceExcercisesHistory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('voiceExercisesId', sa.String(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('voice',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
        batch_op.alter_column('voiceImage',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('recognizedText',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
        batch_op.alter_column('accuracyScore',
               existing_type=sa.TEXT(),
               type_=sa.Float(),
               nullable=True)
        batch_op.alter_column('pronunciationScore',
               existing_type=sa.TEXT(),
               type_=sa.Float(),
               nullable=True)
        batch_op.alter_column('fluencyScore',
               existing_type=sa.TEXT(),
               type_=sa.Float(),
               nullable=True)
        batch_op.alter_column('speedScore',
               existing_type=sa.TEXT(),
               type_=sa.Float(),
               nullable=True)
        batch_op.alter_column('phonemes',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
        batch_op.alter_column('createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('studentId',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
        batch_op.drop_index('VoiceExcercisesHistory_id_key')
        batch_op.drop_constraint('VoiceExcercisesHistory_studentId_fkey', type_='foreignkey')
        batch_op.drop_constraint('VoiceExcercisesHistory_voiceExcercisesId_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'Student', ['studentId'], ['id'])
        batch_op.create_foreign_key(None, 'VoiceExcercises', ['voiceExercisesId'], ['id'])
        batch_op.drop_column('voiceExcercisesId')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('VoiceExcercisesHistory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('voiceExcercisesId', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('VoiceExcercisesHistory_voiceExcercisesId_fkey', 'VoiceExcercises', ['voiceExcercisesId'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.create_foreign_key('VoiceExcercisesHistory_studentId_fkey', 'Student', ['studentId'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index('VoiceExcercisesHistory_id_key', ['id'], unique=True)
        batch_op.alter_column('studentId',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('phonemes',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('speedScore',
               existing_type=sa.Float(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('fluencyScore',
               existing_type=sa.Float(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('pronunciationScore',
               existing_type=sa.Float(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('accuracyScore',
               existing_type=sa.Float(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('recognizedText',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('voiceImage',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('voice',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.drop_column('voiceExercisesId')

    with op.batch_alter_table('VoiceExcercises', schema=None) as batch_op:
        batch_op.add_column(sa.Column('moduleId', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('VoiceExcercises_userId_fkey', 'User', ['userId'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key('VoiceExcercises_moduleId_fkey', 'Module', ['moduleId'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index('VoiceExcercises_id_key', ['id'], unique=True)
        batch_op.alter_column('createdAt',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('grade',
               existing_type=sa.Enum('Prep', 'Kinder', 'GradeOne', 'GradeTwo', 'GradeThree', name='grade_enum'),
               type_=postgresql.ENUM('GradeOne', 'GradeTwo', 'GradeThree', name='Grade'),
               nullable=False)
        batch_op.alter_column('voice',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('userId',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.add_column(sa.Column('resetPasswordTokenExpiry', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('deletedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('resetPasswordToken', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('role', postgresql.ENUM('Administrator', 'Teacher', 'Student', name='Role'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('User_username_key', ['username'], unique=True)
        batch_op.create_index('User_resetPasswordToken_key', ['resetPasswordToken'], unique=True)
        batch_op.create_index('User_id_key', ['id'], unique=True)
        batch_op.create_index('User_email_key', ['email'], unique=True)
        batch_op.alter_column('password',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('Student', schema=None) as batch_op:
        batch_op.add_column(sa.Column('middlename', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gname', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('image', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('studentPassword', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('studentUsername', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('age', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('bdate', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('lrnNo', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('Student_userId_fkey', 'User', ['userId'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.create_index('Student_studentUsername_key', ['studentUsername'], unique=True)
        batch_op.create_index('Student_id_key', ['id'], unique=True)
        batch_op.alter_column('grade',
               existing_type=sa.String(),
               type_=postgresql.ENUM('GradeOne', 'GradeTwo', 'GradeThree', name='Grade'),
               nullable=False)
        batch_op.alter_column('sex',
               existing_type=sa.String(),
               type_=postgresql.ENUM('Male', 'Female', name='Gender'),
               nullable=False)
        batch_op.alter_column('lastname',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('firstname',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.drop_column('user_id')

    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='_prisma_migrations_pkey')
    )
    op.create_table('StudentQuizHistory',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Option1', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Option2', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Option3', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('CorrectAnswer', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('questionId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('studentId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('attemptCount', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('correctAnswersCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wrongAnswersCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalQuestions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['questionId'], ['Questions.id'], name='StudentQuizHistory_questionId_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['studentId'], ['Student.id'], name='StudentQuizHistory_studentId_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='StudentQuizHistory_pkey')
    )
    with op.batch_alter_table('StudentQuizHistory', schema=None) as batch_op:
        batch_op.create_index('StudentQuizHistory_id_key', ['id'], unique=True)

    op.create_table('Module',
    sa.Column('grade', postgresql.ENUM('GradeOne', 'GradeTwo', 'GradeThree', name='Grade'), autoincrement=False, nullable=False),
    sa.Column('moduleTitle', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('moduleDescription', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('learnOutcome1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('videoModule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('subjects', postgresql.ENUM('Reading', 'Math', name='Subject'), autoincrement=False, nullable=False),
    sa.Column('imageModule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Module_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('Module', schema=None) as batch_op:
        batch_op.create_index('Module_id_key', ['id'], unique=True)

    op.create_table('Questions',
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Option1', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Option2', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Option3', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('CorrectAnswers', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('moduleId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('grade', postgresql.ENUM('GradeOne', 'GradeTwo', 'GradeThree', name='Grade'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['moduleId'], ['Module.id'], name='Questions_moduleId_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name='Questions_userId_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='Questions_pkey')
    )
    with op.batch_alter_table('Questions', schema=None) as batch_op:
        batch_op.create_index('Questions_id_key', ['id'], unique=True)

    op.create_table('OTP',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('otp', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expiresAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('isUsed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name='OTP_userId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='OTP_pkey')
    )
    # ### end Alembic commands ###
